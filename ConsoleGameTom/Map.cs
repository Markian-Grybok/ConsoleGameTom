using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleGameTom
{
    public sealed class Map : Pixcel
    {

        #region ---- CONSTS ----

        private const int MAP_WIDTH = 38;
        private const int MAP_HEIGHT = 25;

        #endregion

        #region ---- FIELDS ----

        public char[,] walls = new char[MAP_HEIGHT, MAP_WIDTH]
        {
            { '#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#' },
            { '#',' ',' ',' ',' ','#','#','#',' ',' ',' ','#','#','#','#',' ',' ','#','#','#','#','#','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#','#','#','#','#' },
            { '#',' ',' ',' ',' ',' ',' ','#','#','#',' ','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#' },
            { '#','#','#','#','#',' ',' ',' ',' ','#',' ',' ','#','#','#','#',' ','#','#','#','#',' ',' ',' ',' ',' ','#','#','#','#','#','#',' ',' ',' ',' ',' ','#' },
            { '#','#','#','#','#','#',' ','#','#','#','#',' ',' ',' ','#','#',' ',' ','#','#',' ',' ',' ','#',' ',' ','#','#',' ',' ',' ',' ',' ',' ','#',' ',' ','#' },
            { '#',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ','#',' ',' ','#','#','#',' ',' ',' ','#',' ',' ','#','#','#','#','#','#','#',' ','#',' ',' ','#' },
            { '#',' ',' ',' ','#','#',' ','#',' ',' ',' ',' ',' ',' ','#',' ',' ',' ','#','#',' ',' ',' ','#','#','#','#',' ',' ',' ','#','#','#',' ','#',' ','#','#' },
            { '#',' ',' ',' ','#','#',' ','#','#','#','#',' ',' ','#','#',' ','#','#','#','#',' ','#',' ',' ',' ',' ','#',' ','#',' ',' ',' ',' ',' ','#',' ',' ','#' },
            { '#',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#','#',' ',' ','#','#','#',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#' },
            { '#',' ',' ',' ',' ','#','#','#','#','#','#','#',' ','#','#','#',' ',' ',' ','#','#',' ',' ',' ',' ',' ','#',' ',' ','#','#',' ',' ',' ','#','#',' ','#' },
            { '#','#',' ','#','#','#','#','#','#',' ',' ','#',' ',' ',' ','#',' ',' ',' ','#',' ',' ',' ','#','#','#','#','#',' ',' ','#',' ',' ',' ','#',' ',' ','#' },
            { '#',' ',' ',' ',' ',' ','#','#','#',' ',' ','#',' ',' ',' ','#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#',' ','#','#' },
            { '#',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#','#',' ',' ','#',' ',' ',' ','#','#',' ',' ',' ','#',' ',' ',' ',' ',' ','#','#','#','#','#',' ',' ','#' },
            { '#','#','#','#','#',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#','#','#','#',' ',' ',' ','#','#','#',' ','#',' ','#','#','#','#',' ','#' },
            { '#','#',' ',' ',' ',' ','#',' ',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ','#','#','#','#','#',' ',' ',' ',' ','#','#','#',' ','#' },
            { '#','#',' ',' ',' ',' ',' ',' ',' ','#','#','#',' ',' ','#',' ',' ','#','#','#',' ',' ','#',' ','#','#','#','#','#',' ',' ',' ','#','#','#','#',' ','#' },
            { '#','#','#',' ',' ',' ',' ','#','#','#',' ',' ',' ',' ',' ',' ','#','#',' ',' ',' ','#','#','#','#',' ',' ',' ','#','#',' ',' ',' ',' ','#',' ',' ','#' },
            { '#','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#','#','#','#',' ',' ',' ',' ',' ','#','#',' ',' ',' ','#','#','#','#','#','#','#',' ','#','#' },
            { '#','#',' ','#',' ',' ',' ','#','#','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ','#','#',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#' },
            { '#','#',' ','#','#','#','#','#',' ',' ',' ',' ',' ','#','#',' ','#','#',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ','#','#',' ',' ',' ',' ',' ',' ','#' },
            { '#','#',' ',' ',' ','#',' ',' ',' ','#','#',' ',' ','#',' ',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#','#','#','#',' ',' ',' ','#' },
            { '#',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ','#','#','#',' ','#','#','#',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#' },
            { '#',' ',' ','#',' ',' ',' ',' ','#','#','#',' ',' ','#',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ',' ','#' },
            { '#',' ',' ',' ',' ',' ','#','#','#','#','#',' ',' ',' ',' ','#',' ',' ',' ','#','#',' ',' ',' ',' ','#','#','#',' ',' ','#',' ',' ',' ',' ',' ',' ','#' },
            { '#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#' },
        };

        #endregion

        #region ---- CTORS ----

        public Map()
        {
            
        }

        public Map(int _x, int _y, ConsoleColor _mapColor, int _sizePix)
            : base(_x, _y, _mapColor, _sizePix)
        {
            Draw();
        }


        #endregion

        #region ---- FUNKS ----
        public override void Draw()
        {
            for (int i = 0; i < MAP_HEIGHT; i++)
            {
                for (int j = 0; j < MAP_WIDTH; j++)
                {
                    if (walls[i, j] == ' ') continue;
                    else
                    {
                        X = j; Y = i;
                        base.Draw();
                    }
                }
            }
        }

        #endregion

    }
}
